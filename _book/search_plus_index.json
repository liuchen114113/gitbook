{"./":{"url":"./","title":"简介","keywords":"","body":"简介 最近准备面试，刚好梳理下前端的一些知识点，分为html/css/javascript/typescript/react/浏览器/算法/原理性知识点等几个部分 Copyright &chen 2020 all right reserved，powered by Gitbook修订时间： 2020-02-28 19:17:33 "},"HTML语义化.html":{"url":"HTML语义化.html","title":"HTML/CSS基础","keywords":"","body":"HTML语义化 1、什么是语义化 2、有哪些语义化的标签 1、什么是语义化 语义化的含义就是用正确的标签做正确的事情，html语义化就是让页面的内容结构化，便于对浏览器、搜索引擎解析；在没有样式CCS情况下也以一种文档格式显示，并且是容易阅读的。搜索引擎的爬虫依赖于标记来确定上下文和各个关键字的权重，利于 SEO。使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。 总结起来就是： 正确的标签做正确的事情 页面内容结构化 无CSS样子时也容易阅读，便于阅读维护和理解 便于浏览器、搜索引擎解析。 利于爬虫标记、利于SEO 2、有哪些语义化的标签 header 元素 header代表“网页”或者“section”的页眉，通常包含h1-h6 元素或者 hgroup, 作为整个页面或者一个内容快的标题。也可以包裹一节的目录部分，一个搜索框，一个nav，或者相关logo。 hgroup 元素 hgroup 元素代表“网页”或“section”的标题，当元素有多个层级时，该元素可以将h1到h6元素放在其内，譬如文章的主标题和副标题组合 footer 元素 footer元素代表“网页”或任意“section”的页脚，通常含有该节的一些基本信息，譬如：作者，相关文档链接，版权资料。如果footer元素包含了整个节，那么它们就代表附录，索引，提拔，许可协议，标签，类别等一些其他类似信息。 nav 元素 nav 元素代表页面的导航链接区域。用于定义页面的主要导航部分。 HTML语义化 CSS 语义化 article 元素 article 代表一个在文档，页面或者网站中自成一体的内容，其目的是为了让开发者独立开发或重用。 除了它的内容，article会有一个标题(通常会在header里)，一个footer页脚。 你好，我是这边文章的标题 你好，我是文章的内容 最终解释权归XXX所有 section 元素 section 元素代表文档中的“节”或“段”，“段”可以是指一片文章里按照主题的分段；“节”可以是指一个页面里的分组。section通常还带标题，虽然html5中section会自动给标题h1-h6降级，但是最好手动给他们降级。 section是啥？ 关于section section的介绍 关于其他 关于其他section的介绍 Copyright &chen 2020 all right reserved，powered by Gitbook修订时间： 2020-02-28 21:40:44 "},"meta标签有什么作用.html":{"url":"meta标签有什么作用.html","title":"meta标签有什么作用","keywords":"","body":"meta标签 1、什么是meta标签 1、什么是meta标签 该标签提供关于HTML文档的元数据。元数据不会显示在页面上，但是对于机器是可读的。它可用于浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或其他 web 服务。 基本属性 属性 值 描述 keywords author / description / keywords / generator / revised / others 把 content 属性关联到一个名称。 content some text 定义与http-equiv或name属性相关的元信息 http-equiv content-type / expire / refresh / set-cookie 把content属性关联到HTTP头部。 举例： Copyright &chen 2020 all right reserved，powered by Gitbook修订时间： 2020-02-28 22:42:22 "},"script标签及其加载顺序的区别.html":{"url":"script标签及其加载顺序的区别.html","title":"script标签及其加载顺序的区别","keywords":"","body":"script标签 script标签的加载顺序 defer属性 async属性 1、script标签的加载顺序 浏览器保证JS执行顺序和书写顺序/依赖顺序一致，尽管它们的加载顺序不是一致的（加载为并行加载并缓存） 2、defer属性 只适用于外部脚本文件。脚本会立即下载，但是会延迟到整个页面全部加载完毕之后再运行。defer多个脚本是按照顺序执行的，如果有依赖关系，需要特别注意脚本顺序。 3、async属性 只适用于外部脚本文件。脚本会立即下载，但是下载完毕之后立即执行，运行的同时并不阻止浏览器去解析下面的内容。使用async主要是脚本下载时并不影响页面的渲染。多个async脚本之间不能保证运行顺序 Copyright &chen 2020 all right reserved，powered by Gitbook修订时间： 2020-02-28 22:41:40 "},"src属性和href属性的区别.html":{"url":"src属性和href属性的区别.html","title":"src属性和href属性的区别","keywords":"","body":"src属性和href属性 href（hypertext reference）： 表示超文本引用，用来建立当前元素和文档间的链接。常用的有link，a 当CSS使用href引用，浏览器会识别该文档问CSS，并行下载，不会停止对当前文档的加载。 src（source）： src指向的内容会嵌入到文档中当前标签的位置,常用的有img, script, iframe 浏览器解析到该元素时会停止对文档的渲染，直到该资源加载完成。这也是将script放底部而不是头部的原因。 Copyright &chen 2020 all right reserved，powered by Gitbook修订时间： 2020-02-28 23:04:51 "},"盒模型.html":{"url":"盒模型.html","title":"盒模型","keywords":"","body":"盒模型 1、基本概念 1、基本概念 盒模型(box model)是CSS中的一个重要概念，它是元素大小的呈现方式。标准模型 box-sizing:content-box IE模型 box-sizing:border-box Copyright &chen 2020 all right reserved，powered by Gitbook修订时间： 2020-02-28 21:08:26 "},"CSS普通流（文档流）.html":{"url":"CSS普通流（文档流）.html","title":"CSS普通流（文档流）","keywords":"","body":"Copyright &chen 2020 all right reserved，powered by Gitbook修订时间： 2020-02-28 20:32:38 "},"CSS布局.html":{"url":"CSS布局.html","title":"CSS布局","keywords":"","body":"Copyright &chen 2020 all right reserved，powered by Gitbook修订时间： 2020-02-28 20:34:35 "},"CSS选择器.html":{"url":"CSS选择器.html","title":"CSS选择器","keywords":"","body":"Copyright &chen 2020 all right reserved，powered by Gitbook修订时间： 2020-02-28 20:34:44 "},"CSS动画.html":{"url":"CSS动画.html","title":"CSS动画","keywords":"","body":"Copyright &chen 2020 all right reserved，powered by Gitbook修订时间： 2020-02-28 20:37:53 "}}